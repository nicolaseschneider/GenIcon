import React, { useState } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { FormGroup } from '~/components/FormGroup'; 
import { Input } from '~/components/Input';
import { api } from "~/utils/api";
import { signIn, signOut, useSession } from "next-auth/react";
import { Button } from "~/components/Button";

const GeneratePage: NextPage = () => {
    const [form, setForm] = useState({
        prompt: "",
    });
    const [imageUrl, setImageUrl] = useState('');
    const session = useSession();

    console.log(session);
    const generateIcon = api.generate.generateIcon.useMutation({
        onSuccess(data) {
            if (!data.imageUrl) return;
            setImageUrl(data.imageUrl);
            setForm({ prompt: '' })
        }
    });

    generateIcon.mutateAsync
    function handleFormSubmit(e: React.FormEvent) {
        e.preventDefault();
        generateIcon.mutate({
            prompt: form.prompt,
        })    
    }

    function updateForm(key: string) {
        return (e: React.ChangeEvent<HTMLInputElement>) => {
            setForm((prevForm) => ({
                ...prevForm,
                [key]: e.target.value,
            }));
        };
    }
    const isLoggedIn = !!session.data

    return (
        <>
        <Head>
            <title>Create T3 App</title>
            <meta name="description" content="Generated by create-t3-app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className="flex min-h-screen flex-col items-center justify-center">
            <form className="flex flex-col gap-4"
                onSubmit={ handleFormSubmit }
            >
                {!isLoggedIn && <Button onClick={ () => signIn().catch(console.error) }>Login</Button>}
                {isLoggedIn && <Button onClick={ () => signOut().catch(console.error) }>Logout</Button>}
                <FormGroup>
                    <label>Prompt</label>
                    <Input
                        value={ form.prompt }
                        onChange={ updateForm("prompt") }
                    />
                </FormGroup>
                <Button>
                    Submit
                </Button>
            </form>
            {imageUrl && <Image 
                src={imageUrl}
                alt='Your generated image'
                width='100'
                height='100'
            /> }
        </main>
        </>
    );
};

export default GeneratePage;
